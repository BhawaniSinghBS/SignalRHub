{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "TagEncruptionKey": "hgfjdshkfjs8f7ds7f98s7f987s98df7s97f9sff",

  "SettingsSeciton": {
    "IsLoggingOn": "false",
    "IsSendDataOnDebugTag": "false",
    "IsSendAllDataOnZeroTagAsWell": "false",

    "IsSendOnlyRealTimeData1": "true",
    "IsSendOnlyRealTime": "true",
    "IsSendRealTimeData1": "true",

    "IsSendCashedDataAtHalfSecond": "true",
    "IsSendCachedDataAt200MilliSecond": "false",

    "IsSendOtherThanData1OnSubscribe": "true",
    "IsSendData1OnSubscribe": "true",

    "SendData1sInSecondsOnSub": "1",
    "SendData1sForSecondsOnSub": "1", // 1 ,2,3,5 sec and (200 (ms) while IsSendCachedDataAt200MilliSecond = true)

    "SendData3GreatedThanId": "123456",
    "IsCnonnectToRedis": "true",
    "IsDisconnectCnonnectToRedisWhenNoClient": "false",
    "RedisConnectionString": "default:userName@103.102.101.111:305",
    "IsSubscribeForRedisItemspecificData": "true",
    "ClearRedisStatusTimeTrackerInHours": "6", // needed if IsSendDataOnDebugTag = true otherwise 6 can be kept as default and the Tracker will be off if IsSendDataOnDebugTag=false

    "IsEnableJWTAndAppAuthenticationForPromethus": "true",
    "AllowCollectMatricsInSeconds": "30",
    //"TimeSpanToResetTotalNotAuthenticatedSessionsInSeconds": "86500",
    //"TimeSpanToResetSendMessagesCountInSeconds": "200",
    "IsAddConnectionIdsToMatrics": "false", // it should not be true more than 5 seconds ,if true make it false within 5 seconds otherwise system will go out of memory

    "SignalRServerUrl": "http://localhost:300/", // http port local
    "SignalRHubUrl": "http://localhost:300/SignalRHub", // http port local
    "PromethusMetricsServerPort": "304",
    "UDPPort": "302"
  },
  "connectionstrings": {
    "DataBase1": "SERVER=1.2.3.4,55;DATABASE=HubDB;uid=hubuid;password=123456;trustservercertificate=true"
  },
  "AllowedHosts": "localhost;127.0.0.1;example.com:10;example.com:200",
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/Serilog-.txt",
          "rollingInterval": "Day",
          "retainedFileCountLimit": 30,
          "fileSizeLimitBytes": 10000000,
          "rollOnFileSizeLimit": true,
          "outputTemplate": "\n===== LOG ENTRY START =====\n[{Timestamp:yyyy-MM-dd HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}\n===== LOG ENTRY END =====\n"
        }
      }
    ]
  }

}
